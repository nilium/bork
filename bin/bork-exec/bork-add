#!/bin/sh

bork_where="$(bork where)"
PATH="${PATH}:${bork_where}"

source "$bork_where/bork-file-index.sh"
source "$bork_where/bork-hash.sh"

# add_index_file file file_hash station_path
function add_index_file {
  if [[ -z "$3" ]] ; then
    echo "bork-add: add_index_file: null station path."
    exit 1
  fi

  file="$1"
  index_path="$(index_for_hash $2 "$3")"

  if [[ ! -f "$index_path" ]] ; then
    bucket_path="$(dirname "$index_path")"

    mkdir -p "$bucket_path"
    bork path-to "$(dirname "$station")" "$file" > "$index_path.meta"
    ln "$file" "$index_path"
  fi
}

# add_tag_to_file tag file_hash station_path
function add_tag_to_file {
  if [[ -z "$3" ]] ; then
    echo "bork-add: add_index_file: null station path."
    exit 1
  fi

  tag_dir="$3/tags/$1"
  mkdir -p "$tag_dir"
  touch "$tag_dir/$2"
}

# get station
station="$(bork station)"

if [[ $? != 0 ]] ; then
  echo "No bork station found."
  exit 1
fi

declare -a file_inputs
declare -a tag_inputs

# get arguments
tag_count=0
file_count=0
tag_next=0

for arg in $@ ; do
  if [[ $tag_next -gt 0 ]] ; then
    tag_inputs[$tag_count]="$arg"
    tag_count=$(($tag_count + 1))

    # reset the tag marker only if we're not in a list of tags
    if [[ $tag_next -lt 2 ]] ; then
      tag_next=0
    fi
  elif [[ "$arg" == "-t" || "$arg" == "--tag" ]] ; then
    tag_next=1
  elif [[ "$arg" == "-T" || "$arg" == '--tags' ]] ; then
    tag_next=2
  else
    file_inputs[$file_count]="$arg"
    file_count=$(($file_count + 1))
  fi
done

# check for arugments
if [[ $file_count -lt 1 ]] ; then
  echo "bork-add: No files specified."
  exit 1
elif [[ $tag_count -lt 1 ]] ; then
  echo "bork-add: No tags specified."
  exit 1
fi

# add files to index
file_idx=0
while [[ $file_idx -lt $file_count ]] ; do
  file="${file_inputs[$file_idx]}"

  if [[ -f "$file" ]] ; then
    file_hash=$(hash_file "$file")

    add_index_file "$file" "$file_hash" "$station"

    for tag in ${tag_inputs[*]} ; do
      add_tag_to_file "$tag" "$file_hash" "$station"
    done
  elif [[ -d "$file" ]] ; then
    for rec_file in `find -X "$file" \! -iname '.*' \! -path '*/.*' \! -type d \! -type b \! -type p \! -type s \! -type c` ; do
      file_inputs[$file_count]="$rec_file"
      file_count=$(($file_count + 1))
    done
  else
    echo "Invalid file: $file"
  fi

  file_idx=$(($file_idx + 1))
done
