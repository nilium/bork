#!/bin/sh

# index_for_hash file_hash [station_path]
function index_for_hash {
  hash_path="index/${1:0:2}/${1:2:${#1}}"
  if [[ -n $2 ]] ; then
    hash_path="$2/$hash_path"
  fi
  echo "$hash_path"
}

# add_index_file file file_hash station_path
function add_index_file {
  if [[ -z "$3" ]] ; then
    echo "bork-add: add_index_file: null station path."
    exit 1
  fi

  file="$1"
  index_path="$(index_for_hash $2 "$3")"

  if [[ ! -f "$index_path" ]] ; then
    bucket_path="$(dirname "$index_path")"

    mkdir -p "$bucket_path"
    basename "$file" > "$index_path.meta"
    ln "$file" "$index_path"
  fi
}

# add_tag_to_file tag file_hash station_path
function add_tag_to_file {
  if [[ -z "$3" ]] ; then
    echo "bork-add: add_index_file: null station path."
    exit 1
  fi

  tag_dir="$3/tags/$1"
  mkdir -p "$tag_dir"
  touch "$tag_dir/$2"
}

function hash_file {
  hash_result=`openssl dgst -sha1 "$1"`
  echo ${hash_result#*\= }
}
# get station
station="$(bork station)"

if [[ $? != 0 ]] ; then
  echo "No bork station found."
  exit 1
fi

declare -a file_inputs
declare -a tag_inputs
declare -a file_hashes

# get arguments
tag_count=0
file_count=0
tag_next=0

for arg in $@ ; do
  if [[ $tag_next -gt 0 ]] ; then
    tag_inputs[$tag_count]="$arg"
    tag_count=$(($tag_count + 1))
    tag_next=0
  elif [[ "$arg" == "-t" || "$arg" == "--tag" ]] ; then
    tag_next=1
  else
    file_inputs[$file_count]="$arg"
    file_count=$(($file_count + 1))
  fi
done

# check for arugments
if [[ $file_count -lt 1 ]] ; then
  echo "bork-add: No files specified."
  exit 1
elif [[ $tag_count -lt 1 ]] ; then
  echo "bork-add: No tags specified."
  exit 1
fi

# add files to index
for file_idx in `seq 0 $(($file_count - 1))` ; do
  file="${file_inputs[$file_idx]}"
  file_hash=$(hash_file "$file")

  add_index_file "$file" "$file_hash" "$station"

  for tag_idx in `seq 0 $(($tag_count - 1))` ; do
    tag="${tag_inputs[$tag_idx]}"
    add_tag_to_file "$tag" "$file_hash" "$station"
  done

  file_hashes[$file_idx]=$file_hash
done
